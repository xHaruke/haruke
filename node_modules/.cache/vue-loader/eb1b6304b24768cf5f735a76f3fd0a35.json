{"remainingRequest":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\src\\components\\NavigationBar.vue?vue&type=template&id=d1a7e442&scoped=true&","dependencies":[{"path":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\src\\components\\NavigationBar.vue","mtime":1646835580423},{"path":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646835554951},{"path":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1646835576693},{"path":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646835554951},{"path":"C:\\Users\\arvind kumar\\Documents\\GitHub\\haruke\\node_modules\\vue-loader\\lib\\index.js","mtime":1646835576690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}